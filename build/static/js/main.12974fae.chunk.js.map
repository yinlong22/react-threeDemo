{"version":3,"sources":["renderHelper.js","demo/初始demo.js","demo/画线demo.js","demo/Home.js","demo/文字demo.js","demo/3DGlb.js","demo/3DDTexture.js","demo/3DAnimat.js","App.js","index.js"],"names":["renderHelper","dom","el","document","querySelector","innerHTML","appendChild","InitDemo","scene","THREE","camera","window","innerWidth","innerHeight","renderer","setSize","domElement","geometry","material","color","cube","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","DrawLineDemo","set","lookAt","points","push","setFromPoints","line","Home","className","to","FontDemo","onWindowResize","aspect","updateProjectionMatrix","background","load","font","matDark","side","matLite","transparent","opacity","shapes","generateShapes","computeBoundingBox","xMid","boundingBox","max","min","translate","text","holeShapes","i","length","shape","holes","j","hole","apply","lineText","getPoints","lineMesh","antialias","setPixelRatio","devicePixelRatio","controls","OrbitControls","target","update","addEventListener","init","TDGlb","outputEncoding","minDistance","maxDistance","enablePan","light","GLTFLoader","gltf","traverse","child","isMesh","normalMapType","deleteAttribute","scale","multiplyScalar","setFromObject","getCenter","TDTexture","mesh","API","offsetX","offsetY","repeatX","repeatY","Math","PI","centerX","centerY","maxPolarAngle","texture","wrapS","wrapT","anisotropy","capabilities","getMaxAnisotropy","map","matrixAutoUpdate","offset","repeat","center","matrix","identity","rotate","updateUvTransform","TDAnimation","container","stats","clock","gui","mixer","actions","activeAction","previousAction","model","face","api","state","fadeToAction","name","duration","fadeOut","reset","setEffectiveTimeScale","setEffectiveWeight","fadeIn","play","fog","hemiLight","dirLight","depthWrite","grid","animations","querySelectorAll","remove","states","emotes","GUI","clip","action","clipAction","indexOf","clampWhenFinished","loop","statesFolder","addFolder","options","onChange","open","emoteFolder","createEmoteCallback","restoreState","removeEventListener","getObjectByName","expressions","Object","keys","morphTargetDictionary","expressionFolder","morphTargetInfluences","createGUI","undefined","e","console","error","Stats","dt","getDelta","App","exact","path","component","ReactDOM","StrictMode","getElementById"],"mappings":"qPAAaA,EAAe,SAACC,GACzB,IAAMC,EAAKC,SAASC,cAAc,cAC7BF,IACLA,EAAGG,UAAY,GACfH,EAAGI,YAAYL,K,OCDNM,EAAW,WACpB,IAAMC,EAAQ,IAAIC,KACZC,EAAS,IAAID,KAAwB,GAAIE,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KACtFC,EAAW,IAAIL,KACrBK,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAC3Cb,EAAac,EAASE,YACtB,IAAMC,EAAW,IAAIR,IACfS,EAAW,IAAIT,IAAwB,CAACU,MAAO,QAC/CC,EAAO,IAAIX,IAAWQ,EAAUC,GACtCV,EAAMa,IAAID,GAEVV,EAAOY,SAASC,EAAI,EAYpB,OAVgB,SAAVC,IACFC,sBAAsBD,GAEtBJ,EAAKM,SAASC,GAAK,IACnBP,EAAKM,SAASE,GAAK,IAEnBd,EAASe,OAAOrB,EAAOE,GAG3Bc,GAEI,yBCxBKM,EAAe,WACxB,IAAMhB,EAAW,IAAIL,KACrBK,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAC3Cb,EAAac,EAASE,YACtB,IAAMN,EAAS,IAAID,KAAwB,GAAIE,OAAOC,WAAaD,OAAOE,YAAa,EAAG,KAC1FH,EAAOY,SAASS,IAAI,EAAG,EAAG,KAC1BrB,EAAOsB,OAAO,EAAG,EAAG,GAEpB,IAAMxB,EAAQ,IAAIC,KACZS,EAAW,IAAIT,IAAwB,CAACU,MAAO,MAC/Cc,EAAS,GACfA,EAAOC,KAAK,IAAIzB,MAAe,GAAI,EAAG,IACtCwB,EAAOC,KAAK,IAAIzB,KAAc,EAAG,GAAI,IACrCwB,EAAOC,KAAK,IAAIzB,KAAc,GAAI,EAAG,IAErC,IAAMQ,GAAW,IAAIR,KAAuB0B,cAAcF,GAC1D,IAAIxB,IAAWQ,EAAUC,GACzB,IAAMkB,EAAO,IAAI3B,IAAWQ,EAAUC,GAItC,OAHAV,EAAMa,IAAIe,GACVtB,EAASe,OAAOrB,EAAOE,GAGnB,yBCtBK2B,EAAO,WAChB,OACI,sBAAKC,UAAU,MAAf,UACI,cAAC,IAAD,CAAMC,GAAG,gBAAT,8BACA,cAAC,IAAD,CAAMA,GAAG,YAAT,8BACA,cAAC,IAAD,CAAMA,GAAG,YAAT,8BACA,cAAC,IAAD,CAAMA,GAAG,SAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,wBACA,cAAC,IAAD,CAAMA,GAAG,eAAT,8B,QCPCC,EAAW,WACpB,IAAI9B,EAAQF,EAAOM,EA0EnB,SAAS2B,IACL/B,EAAOgC,OAAS/B,OAAOC,WAAaD,OAAOE,YAC3CH,EAAOiC,yBAEP7B,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAY/C,OAtFA,YAEIH,EAAS,IAAID,KAAwB,GAAIE,OAAOC,WAAaD,OAAOE,YAAa,EAAG,MAC7ES,SAASS,IAAI,KAAM,KAAM,OAGhCvB,EAAQ,IAAIC,MACNmC,WAAa,IAAInC,IAAY,WAGpB,IAAIA,KACZoC,KAAK,kCAAkC,SAAUC,GACpD,IAEMC,EAAU,IAAItC,IAAwB,CACxCU,MAHU,MAIV6B,KAAMvC,MAGJwC,EAAU,IAAIxC,IAAwB,CACxCU,MARU,MASV+B,aAAa,EACbC,QAAS,GACTH,KAAMvC,MAGJ2C,EAASN,EAAKO,eADJ,kCAC4B,KACtCpC,EAAW,IAAIR,KAAoB2C,GACzCnC,EAASqC,qBACT,IAAMC,GAAQ,IAAOtC,EAASuC,YAAYC,IAAI9B,EAAIV,EAASuC,YAAYE,IAAI/B,GAC3EV,EAAS0C,UAAUJ,EAAM,EAAG,GAE5B,IAAMK,EAAO,IAAInD,IAAWQ,EAAUgC,GACtCW,EAAKtC,SAASC,GAAK,IACnBf,EAAMa,IAAIuC,GAEV,IADA,IAAMC,EAAa,GACVC,EAAI,EAAGA,EAAIV,EAAOW,OAAQD,IAAK,CACpC,IAAME,EAAQZ,EAAOU,GACrB,GAAIE,EAAMC,OAASD,EAAMC,MAAMF,OAAS,EACpC,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAMC,MAAMF,OAAQG,IAAK,CACzC,IAAMC,EAAOH,EAAMC,MAAMC,GACzBL,EAAW3B,KAAKiC,IAI5Bf,EAAOlB,KAAKkC,MAAMhB,EAAQS,GAG1B,IADA,IAAMQ,EAAW,IAAI5D,IACZqD,EAAI,EAAGA,EAAIV,EAAOW,OAAQD,IAAK,CACpC,IACM7B,EADQmB,EAAOU,GACAQ,YACfrD,GAAW,IAAIR,KAAuB0B,cAAcF,GAC1DhB,EAAS0C,UAAUJ,EAAM,EAAG,GAC5B,IAAMgB,EAAW,IAAI9D,IAAWQ,EAAU8B,GAC1CsB,EAAShD,IAAIkD,GAEjB/D,EAAMa,IAAIgD,OAEdvD,EAAW,IAAIL,KAAoB,CAAC+D,WAAW,KACtCC,cAAc9D,OAAO+D,kBAC9B5D,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAC3Cb,EAAac,EAASE,YAEtB,IAAM2D,EAAW,IAAIC,IAAclE,EAAQI,EAASE,YACpD2D,EAASE,OAAO9C,IAAI,EAAG,EAAG,GAC1B4C,EAASG,SAETnE,OAAOoE,iBAAiB,SAAUtC,GAtEtCuC,GAgFA,SAASxD,IACLC,sBAAsBD,GAKtBV,EAASe,OAAOrB,EAAOE,GArF3Bc,GAyFI,yB,QC3FKyD,EAAQ,WACjB,IAAInE,EAAUN,EAAOE,EAuDrB,SAAS+B,IACL3B,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAE3CH,EAAOgC,OAAS/B,OAAOC,WAAaD,OAAOE,YAC3CH,EAAOiC,yBAEPd,IAGJ,SAASA,IACLf,EAASe,OAAOrB,EAAOE,GAG3B,OAjEA,YAEII,EAAW,IAAIL,MACNM,QAAQJ,OAAOC,WAAYD,OAAOE,aAC3Cb,EAAac,EAASE,YAEtBF,EAASoE,eAAiBzE,KAG1BD,EAAQ,IAAIC,MAGZC,EAAS,IAAID,KAAwB,GAAIE,OAAOC,WAAaD,OAAOE,YAAa,EAAG,MAC7ES,SAASS,KAAK,GAAI,EAAG,IAC5BvB,EAAMa,IAAIX,GAGV,IAAMiE,EAAW,IAAIC,IAAclE,EAAQI,EAASE,YACpD2D,EAASI,iBAAiB,SAAUlD,GACpC8C,EAASQ,YAAc,GACvBR,EAASS,YAAc,GACvBT,EAASU,WAAY,EAGrB7E,EAAMa,IAAI,IAAIZ,IAAmB,SAAU,KAG3C,IAAM6E,EAAQ,IAAI7E,KAAiB,SAAU,KAC7CC,EAAOW,IAAIiE,IAGX,IAAIC,KAAa1C,KAAK,kBAAkB,SAAU2C,GAC9CA,EAAKhF,MAAMiF,UAAS,SAAUC,GACtBA,EAAMC,SAGND,EAAMxE,SAAS0E,cAAgBnF,KAE/BiF,EAAMzE,SAAS4E,gBAAgB,UAC/BH,EAAMxE,SAAS8B,KAAOvC,IACtBiF,EAAMI,MAAMC,eAAe,KAG3B,IAAItF,KAAauF,cAAcN,GAAOO,UAAUP,EAAMpE,UAAUyE,gBAAgB,GAChFvF,EAAMa,IAAIqE,OAGlB7D,OAEJlB,OAAOoE,iBAAiB,SAAUtC,GAnDtCuC,GAoEI,yBCvEKkB,EAAY,WACrB,IAAIC,EAAMrF,EAAUN,EAAOE,EACrB0F,EAAM,CACRC,QAAS,EACTC,QAAS,EACTC,QAAS,IACTC,QAAS,IACT9E,SAAU+E,KAAKC,GAAK,EACpBC,QAAS,GACTC,QAAS,IAwCb,SAAS/E,IACLf,EAASe,OAAOrB,EAAOE,GAG3B,SAAS+B,IACL/B,EAAOgC,OAAS/B,OAAOC,WAAaD,OAAOE,YAC3CH,EAAOiC,yBACP7B,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAC3CgB,IAyBJ,OApEA,YACIf,EAAW,IAAIL,MACNgE,cAAc9D,OAAO+D,kBAC9B5D,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAC3Cb,EAAac,EAASE,YAEtBR,EAAQ,IAAIC,MAEZC,EAAS,IAAID,KAAwB,GAAIE,OAAOC,WAAaD,OAAOE,YAAa,EAAG,MAC7ES,SAASS,IAAI,GAAI,GAAI,IAC5BvB,EAAMa,IAAIX,GAEV,IAAMiE,EAAW,IAAIC,IAAclE,EAAQI,EAASE,YACpD2D,EAASI,iBAAiB,SAAUlD,GACpC8C,EAASQ,YAAc,GACvBR,EAASS,YAAc,GACvBT,EAASkC,cAAgBJ,KAAKC,GAAK,EAEnC,IAAMzF,EAAW,IAAIR,IAAkB,GAAI,GAAI,KAE/C,IAAIA,MAAsBoC,KAAK,uBAAuB,SAAUiE,GAC5DA,EAAQC,MAAQD,EAAQE,MAAQvG,KAChCqG,EAAQG,WAAanG,EAASoG,aAAaC,mBAE3C,IAAMjG,EAAW,IAAIT,IAAwB,CAAC2G,IAAKN,IAEnDX,EAAO,IAAI1F,IAAWQ,EAAUC,GAChCV,EAAMa,IAAI8E,GAmBlB,WACI,IAAMW,EAAUX,EAAKjF,SAASkG,KACG,IAA7BN,EAAQO,kBACRP,EAAQQ,OAAOvF,IAAIqE,EAAIC,QAASD,EAAIE,SACpCQ,EAAQS,OAAOxF,IAAIqE,EAAIG,QAASH,EAAII,SACpCM,EAAQU,OAAOzF,IAAIqE,EAAIO,QAASP,EAAIQ,SACpCE,EAAQpF,SAAW0E,EAAI1E,UAKvBoF,EAAQW,OACHC,WACA/D,WAAWyC,EAAIO,SAAUP,EAAIQ,SAC7Be,OAAOvB,EAAI1E,UACXoE,MAAMM,EAAIG,QAASH,EAAII,SACvB7C,UAAUyC,EAAIO,QAASP,EAAIQ,SAC3BjD,UAAUyC,EAAIC,QAASD,EAAIE,SAEpCzE,IApCI+F,GACA/F,OAEJlB,OAAOoE,iBAAiB,SAAUtC,GAlCtCuC,GAsEQ,yB,gBChFC6C,EAAc,WACvB,IAAIC,EAAWC,EAAOC,EAAOC,EAAKC,EAAOC,EAASC,EAAcC,EAC5D3H,EAAQF,EAAOM,EAAUwH,EAAOC,EAE9BC,EAAM,CAACC,MAAO,WAgIpB,SAASC,EAAaC,EAAMC,GACxBP,EAAiBD,EACjBA,EAAeD,EAAQQ,GACnBN,IAAmBD,GACnBC,EAAeQ,QAAQD,GAE3BR,EACKU,QACAC,sBAAsB,GACtBC,mBAAmB,GACnBC,OAAOL,GACPM,OAIT,SAASzG,IACL/B,EAAOgC,OAAS/B,OAAOC,WAAaD,OAAOE,YAC3CH,EAAOiC,yBACP7B,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAY/C,OAzJA,WAEI,GADAiH,EAAY3H,SAASC,cAAc,eAC9BD,SAASC,cAAc,cAAc,QAE1CM,EAAS,IAAID,KAAwB,GAAIE,OAAOC,WAAaD,OAAOE,YAAa,IAAM,MAChFS,SAASS,KAAK,EAAG,EAAG,IAC3BrB,EAAOsB,OAAO,IAAIvB,KAAc,EAAG,EAAG,KAEtCD,EAAQ,IAAIC,MACNmC,WAAa,IAAInC,IAAY,UACnCD,EAAM2I,IAAM,IAAI1I,IAAU,SAAU,GAAI,KAExCuH,EAAQ,IAAIvH,IAGZ,IAAM2I,EAAY,IAAI3I,IAAsB,SAAU,SACtD2I,EAAU9H,SAASS,IAAI,EAAG,GAAI,GAC9BvB,EAAMa,IAAI+H,GAEV,IAAMC,EAAW,IAAI5I,IAAuB,UAC5C4I,EAAS/H,SAASS,IAAI,EAAG,GAAI,IAC7BvB,EAAMa,IAAIgI,GAGV,IAAMlD,EAAO,IAAI1F,IAAW,IAAIA,KAAoB,IAAM,KAAO,IAAIA,IAAwB,CACzFU,MAAO,SACPmI,YAAY,KAEhBnD,EAAKzE,SAASC,GAAK8E,KAAKC,GAAK,EAC7BlG,EAAMa,IAAI8E,GAEV,IAAMoD,EAAO,IAAI9I,IAAiB,IAAK,GAAI,EAAU,GACrD8I,EAAKrI,SAASiC,QAAU,GACxBoG,EAAKrI,SAASgC,aAAc,EAC5B1C,EAAMa,IAAIkI,IAGK,IAAIhE,KACZ1C,KAAK,wBAAwB,SAAU2C,GAC1C8C,EAAQ9C,EAAKhF,MACbA,EAAMa,IAAIiH,GAkBlB,SAAmBA,EAAOkB,GAClBrJ,SAASsJ,iBAAiB,MAAM,IAChCtJ,SAASsJ,iBAAiB,MAAM,GAAGC,SAEvC,IAAMC,EAAS,CAAC,OAAQ,UAAW,UAAW,QAAS,QAAS,UAAW,YACrEC,EAAS,CAAC,OAAQ,MAAO,KAAM,OAAQ,QAAS,YAEtD3B,EAAM,IAAI4B,IAEV3B,EAAQ,IAAIzH,IAAqB6H,GAEjCH,EAAU,GAEV,IAAK,IAAIrE,EAAI,EAAGA,EAAI0F,EAAWzF,OAAQD,IAAK,CACxC,IAAMgG,EAAON,EAAW1F,GAClBiG,EAAS7B,EAAM8B,WAAWF,GAChC3B,EAAQ2B,EAAKnB,MAAQoB,GACjBH,EAAOK,QAAQH,EAAKnB,OAAS,GAAKgB,EAAOM,QAAQH,EAAKnB,OAAS,KAC/DoB,EAAOG,mBAAoB,EAC3BH,EAAOI,KAAO1J,KAKtB,IAAM2J,EAAenC,EAAIoC,UAAU,UAClBD,EAAa/I,IAAImH,EAAK,SAAS8B,QAAQX,GAC/CY,UAAS,WACd7B,EAAaF,EAAIC,MAAO,OAG5B2B,EAAaI,OAGb,IAAMC,EAAcxC,EAAIoC,UAAU,UAClC,SAASK,EAAoB/B,GACzBH,EAAIG,GAAQ,WACRD,EAAaC,EAAM,IACnBT,EAAMnD,iBAAiB,WAAY4F,IAEvCF,EAAYpJ,IAAImH,EAAKG,GAGzB,SAASgC,IACLzC,EAAM0C,oBAAoB,WAAYD,GACtCjC,EAAaF,EAAIC,MAAO,IAG5B,IAAK,IAAI3E,EAAI,EAAGA,EAAI8F,EAAO7F,OAAQD,IAC/B4G,EAAoBd,EAAO9F,IAG/B2G,EAAYD,OAGZjC,EAAOD,EAAMuC,gBAAgB,UAG7B,IAFA,IAAMC,EAAcC,OAAOC,KAAKzC,EAAK0C,uBAC/BC,EAAmBjD,EAAIoC,UAAU,eAC9BvG,EAAI,EAAGA,EAAIgH,EAAY/G,OAAQD,IACpCoH,EAAiB7J,IAAIkH,EAAK4C,sBAAuBrH,EAAG,EAAG,EAAG,KAAM6E,KAAKmC,EAAYhH,KAErFsE,EAAeD,EAAO,SACTe,OACbgC,EAAiBV,OA/EbY,CAAU9C,EAAO9C,EAAKgE,mBACvB6B,GAAW,SAAUC,GACpBC,QAAQC,MAAMF,OAElBxK,EAAW,IAAIL,KAAoB,CAAC+D,WAAW,KACtCC,cAAc9D,OAAO+D,kBAC9B5D,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAC3CC,EAASoE,eAAiBzE,KAC1BT,EAAac,EAASE,YAEtBL,OAAOoE,iBAAiB,SAAUtC,GAGlCsF,EAAQ,IAAI0D,IACZ3D,EAAUxH,YAAYyH,EAAM9H,KA1DhC+E,GAmJA,SAASxD,IACL,IAAKrB,SAASC,cAAc,cAAc,OAC1C,IAAMsL,EAAK1D,EAAM2D,WACbzD,GAAOA,EAAMpD,OAAO4G,GACxBjK,sBAAsBD,GACtBV,EAASe,OAAOrB,EAAOE,GACvBqH,EAAMjD,SAxJVtD,GA2JO,yBC5IIoK,MAlBf,WACI,OACI,sBAAKtJ,UAAU,MAAf,UACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOuJ,OAAK,EAACC,KAAK,MAClB,cAAC,IAAD,CAAOA,KAAK,gBAAgBC,UAAWjK,IACvC,cAAC,IAAD,CAAOgK,KAAK,YAAYC,UAAWxL,IACnC,cAAC,IAAD,CAAOuL,KAAK,YAAYC,UAAWvJ,IACnC,cAAC,IAAD,CAAOsJ,KAAK,SAASC,UAAW9G,IAChC,cAAC,IAAD,CAAO6G,KAAK,aAAaC,UAAW7F,IACpC,cAAC,IAAD,CAAO4F,KAAK,eAAeC,UAAWlE,OAE1C,qBAAKvF,UAAU,kBClB3B0J,IAASnK,OACL,cAAC,IAAMoK,WAAP,UACI,cAAC,EAAD,MAEJ9L,SAAS+L,eAAe,W","file":"static/js/main.12974fae.chunk.js","sourcesContent":["export const renderHelper = (dom) =>{\n    const el = document.querySelector('.showDemos')\n    if (!el)return\n    el.innerHTML = ''\n    el.appendChild(dom)\n}","import * as THREE from 'three'\nimport {renderHelper} from \"../renderHelper\";\n\nexport const InitDemo = () => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderHelper(renderer.domElement)\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({color: 0x00ff00});\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    camera.position.z = 5;\n\n    const animate = function () {\n        requestAnimationFrame(animate);\n\n        cube.rotation.x += 0.01;\n        cube.rotation.y += 0.01;\n\n        renderer.render(scene, camera);\n    };\n\n    animate();\n    return (\n        <div/>\n    )\n}\n","import * as THREE from 'three'\nimport {renderHelper} from \"../renderHelper\";\n\nexport const DrawLineDemo = () => {\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderHelper(renderer.domElement)\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 500);\n    camera.position.set(0, 0, 100);\n    camera.lookAt(0, 0, 0);\n\n    const scene = new THREE.Scene();\n    const material = new THREE.LineBasicMaterial({color: 0x0000ff});\n    const points = [];\n    points.push(new THREE.Vector3(-10, 0, 0));\n    points.push(new THREE.Vector3(0, 10, 0));\n    points.push(new THREE.Vector3(10, 0, 0));\n\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\n    new THREE.Line(geometry, material);\n    const line = new THREE.Line(geometry, material);\n    scene.add(line);\n    renderer.render(scene, camera);\n\n    return (\n        <div />\n    )\n}\n\n","import {Link} from \"react-router-dom\";\nimport '../App.css';\n\nexport const Home = () => {\n    return (\n        <div className='nav' >\n            <Link to='/DrawLineDemo'>画线demo</Link>\n            <Link to='/InitDemo'>滚动demo</Link>\n            <Link to='/FontDemo'>文字demo</Link>\n            <Link to='/3DGlb'>3D-glb</Link>\n            <Link to='/3DTexture'>3D-texture</Link>\n            <Link to='/TDAnimation'>3D-Animation</Link>\n        </div>\n    )\n}\n","import * as THREE from 'three'\nimport {renderHelper} from \"../renderHelper\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\n\nexport const FontDemo = () => {\n    let camera, scene, renderer;\n    init();\n    animate();\n\n    function init() {\n        // 相机\n        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000);\n        camera.position.set(100, -1600, 1800);\n\n        // 场景\n        scene = new THREE.Scene();\n        scene.background = new THREE.Color(0xf0f0f0);\n\n        // loader\n        const loader = new THREE.FontLoader();\n        loader.load('/helvetiker_bold.typeface.json', function (font) {\n            const color = 0x006699;\n            // 阴影粗体\n            const matDark = new THREE.LineBasicMaterial({\n                color: color,\n                side: THREE.DoubleSide\n            });\n            // 字体\n            const matLite = new THREE.MeshBasicMaterial({\n                color: color,\n                transparent: true,\n                opacity: 0.4,\n                side: THREE.DoubleSide\n            });\n            const message = \"   Text What\\nYou Want to text.\";\n            const shapes = font.generateShapes(message, 100);\n            const geometry = new THREE.ShapeGeometry(shapes);\n            geometry.computeBoundingBox();\n            const xMid = -0.5 * (geometry.boundingBox.max.x - geometry.boundingBox.min.x);\n            geometry.translate(xMid, 0, 0);\n\n            const text = new THREE.Mesh(geometry, matLite);\n            text.position.z = -150;\n            scene.add(text);\n            const holeShapes = [];\n            for (let i = 0; i < shapes.length; i++) {\n                const shape = shapes[i];\n                if (shape.holes && shape.holes.length > 0) {\n                    for (let j = 0; j < shape.holes.length; j++) {\n                        const hole = shape.holes[j];\n                        holeShapes.push(hole);\n                    }\n                }\n            }\n            shapes.push.apply(shapes, holeShapes);\n\n            const lineText = new THREE.Object3D();\n            for (let i = 0; i < shapes.length; i++) {\n                const shape = shapes[i];\n                const points = shape.getPoints();\n                const geometry = new THREE.BufferGeometry().setFromPoints(points);\n                geometry.translate(xMid, 0, 0);\n                const lineMesh = new THREE.Line(geometry, matDark);\n                lineText.add(lineMesh);\n            }\n            scene.add(lineText);\n        });\n        renderer = new THREE.WebGLRenderer({antialias: true});\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderHelper(renderer.domElement)\n\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.target.set(0, 0, 0);\n        controls.update();\n\n        window.addEventListener('resize', onWindowResize);\n    }\n\n    function onWindowResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function animate() {\n        requestAnimationFrame(animate);\n        render();\n    }\n\n    function render() {\n        renderer.render(scene, camera);\n    }\n\n    return (\n        <div/>\n    )\n}\n","import * as THREE from 'three'\nimport {renderHelper} from \"../renderHelper\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\n\nexport const TDGlb = () => {\n    let renderer, scene, camera;\n    init();\n\n    function init() {\n        // renderer\n        renderer = new THREE.WebGLRenderer();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderHelper(renderer.domElement)\n\n        renderer.outputEncoding = THREE.sRGBEncoding;\n\n        // scene\n        scene = new THREE.Scene();\n\n        // camera\n        camera = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, 1, 1000);\n        camera.position.set(-10, 0, 23);\n        scene.add(camera);\n\n        // controls\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.addEventListener('change', render);\n        controls.minDistance = 10;\n        controls.maxDistance = 50;\n        controls.enablePan = false;\n\n        // ambient\n        scene.add(new THREE.AmbientLight(0xffffff, .2));\n\n        // light\n        const light = new THREE.PointLight(0xffffff, 1.5);\n        camera.add(light);\n\n        // model\n        new GLTFLoader().load('/Nefertiti.glb', function (gltf) {\n            gltf.scene.traverse(function (child) {\n                if (child.isMesh) {\n                    // glTF currently supports only tangent-space normal maps.\n                    // this model has been modified to demonstrate the use of an object-space normal map.\n                    child.material.normalMapType = THREE.ObjectSpaceNormalMap;\n                    // attribute normals are not required with an object-space normal map. remove them.\n                    child.geometry.deleteAttribute('normal');\n                    child.material.side = THREE.DoubleSide;\n                    child.scale.multiplyScalar(0.5);\n\n                    // recenter\n                    new THREE.Box3().setFromObject(child).getCenter(child.position).multiplyScalar(-1);\n                    scene.add(child);\n                }\n            });\n            render();\n        });\n        window.addEventListener('resize', onWindowResize);\n    }\n\n    function onWindowResize() {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n\n        render();\n    }\n\n    function render() {\n        renderer.render(scene, camera);\n    }\n\n    return (\n        <div/>\n    )\n}\n","import * as THREE from \"three\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nimport {renderHelper} from \"../renderHelper\";\n\nexport const TDTexture = () => {\n    let mesh, renderer, scene, camera;\n    const API = {\n        offsetX: 0,\n        offsetY: 0,\n        repeatX: 0.25,\n        repeatY: 0.25,\n        rotation: Math.PI / 4, // positive is counter-clockwise\n        centerX: 0.5,\n        centerY: 0.5\n    };\n\n    init();\n\n    function init() {\n        renderer = new THREE.WebGLRenderer();\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderHelper(renderer.domElement)\n\n        scene = new THREE.Scene();\n\n        camera = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, 1, 1000);\n        camera.position.set(10, 15, 25);\n        scene.add(camera);\n\n        const controls = new OrbitControls(camera, renderer.domElement);\n        controls.addEventListener('change', render);\n        controls.minDistance = 20;\n        controls.maxDistance = 50;\n        controls.maxPolarAngle = Math.PI / 2;\n\n        const geometry = new THREE.BoxGeometry(10, 10, 10);\n\n        new THREE.TextureLoader().load('/uv_grid_opengl.jpg', function (texture) {\n            texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n            texture.anisotropy = renderer.capabilities.getMaxAnisotropy();\n            //texture.matrixAutoUpdate = false; // default true; set to false to update texture.matrix manually\n            const material = new THREE.MeshBasicMaterial({map: texture});\n\n            mesh = new THREE.Mesh(geometry, material);\n            scene.add(mesh);\n\n            updateUvTransform();\n            render();\n        });\n        window.addEventListener('resize', onWindowResize);\n    }\n\n    function render() {\n        renderer.render(scene, camera);\n    }\n\n    function onWindowResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        render();\n    }\n\n    function updateUvTransform() {\n        const texture = mesh.material.map;\n        if (texture.matrixAutoUpdate === true) {\n            texture.offset.set(API.offsetX, API.offsetY);\n            texture.repeat.set(API.repeatX, API.repeatY);\n            texture.center.set(API.centerX, API.centerY);\n            texture.rotation = API.rotation; // rotation is around [ 0.5, 0.5 ]\n        } else {\n            // one way...\n            //texture.matrix.setUvTransform( API.offsetX, API.offsetY, API.repeatX, API.repeatY, API.rotation, API.centerX, API.centerY );\n            // another way...\n            texture.matrix\n                .identity()\n                .translate(-API.centerX, -API.centerY)\n                .rotate(API.rotation)                    // I don't understand how rotation can preceed scale, but it seems to be required...\n                .scale(API.repeatX, API.repeatY)\n                .translate(API.centerX, API.centerY)\n                .translate(API.offsetX, API.offsetY);\n        }\n        render();\n    }\n\n    return (<div/>)\n}\n","import * as THREE from \"three\";\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\";\nimport Stats from \"three/examples/jsm/libs/stats.module\";\nimport {GUI} from \"three/examples/jsm/libs/dat.gui.module\";\nimport {renderHelper} from \"../renderHelper\";\n\nexport const TDAnimation = () => {\n    let container, stats, clock, gui, mixer, actions, activeAction, previousAction;\n    let camera, scene, renderer, model, face;\n\n    const api = {state: 'Walking'};\n\n    init();\n    animate();\n\n    function init() {\n        container = document.querySelector('.showDemos')\n        if (!document.querySelector('.showDemos'))return\n\n        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.25, 100);\n        camera.position.set(-5, 3, 10);\n        camera.lookAt(new THREE.Vector3(0, 2, 0));\n\n        scene = new THREE.Scene();\n        scene.background = new THREE.Color(0xe0e0e0);\n        scene.fog = new THREE.Fog(0xe0e0e0, 20, 100);\n\n        clock = new THREE.Clock();\n\n        // lights\n        const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444);\n        hemiLight.position.set(0, 20, 0);\n        scene.add(hemiLight);\n\n        const dirLight = new THREE.DirectionalLight(0xffffff);\n        dirLight.position.set(0, 20, 10);\n        scene.add(dirLight);\n\n        // ground\n        const mesh = new THREE.Mesh(new THREE.PlaneGeometry(2000, 2000), new THREE.MeshPhongMaterial({\n            color: 0x999999,\n            depthWrite: false\n        }));\n        mesh.rotation.x = -Math.PI / 2;\n        scene.add(mesh);\n\n        const grid = new THREE.GridHelper(200, 40, 0x000000, 0x000000);\n        grid.material.opacity = 0.2;\n        grid.material.transparent = true;\n        scene.add(grid);\n\n        // model\n        const loader = new GLTFLoader();\n        loader.load('/RobotExpressive.glb', function (gltf) {\n            model = gltf.scene;\n            scene.add(model);\n            createGUI(model, gltf.animations);\n        }, undefined, function (e) {\n            console.error(e);\n        });\n        renderer = new THREE.WebGLRenderer({antialias: true});\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.outputEncoding = THREE.sRGBEncoding;\n        renderHelper(renderer.domElement);\n\n        window.addEventListener('resize', onWindowResize);\n\n        // stats\n        stats = new Stats();\n        container.appendChild(stats.dom);\n    }\n\n    function createGUI(model, animations) {\n        if (document.querySelectorAll('.a')[0]){\n            document.querySelectorAll('.a')[0].remove()\n        }\n        const states = ['Idle', 'Walking', 'Running', 'Dance', 'Death', 'Sitting', 'Standing'];\n        const emotes = ['Jump', 'Yes', 'No', 'Wave', 'Punch', 'ThumbsUp'];\n\n        gui = new GUI();\n\n        mixer = new THREE.AnimationMixer(model);\n\n        actions = {};\n\n        for (let i = 0; i < animations.length; i++) {\n            const clip = animations[i];\n            const action = mixer.clipAction(clip);\n            actions[clip.name] = action;\n            if (emotes.indexOf(clip.name) >= 0 || states.indexOf(clip.name) >= 4) {\n                action.clampWhenFinished = true;\n                action.loop = THREE.LoopOnce;\n            }\n        }\n\n        // states\n        const statesFolder = gui.addFolder('States');\n        const clipCtrl = statesFolder.add(api, 'state').options(states);\n        clipCtrl.onChange(function () {\n            fadeToAction(api.state, 0.5);\n        });\n\n        statesFolder.open();\n\n        // emotes\n        const emoteFolder = gui.addFolder('Emotes');\n        function createEmoteCallback(name) {\n            api[name] = function () {\n                fadeToAction(name, 0.2);\n                mixer.addEventListener('finished', restoreState);\n            };\n            emoteFolder.add(api, name);\n        }\n\n        function restoreState() {\n            mixer.removeEventListener('finished', restoreState);\n            fadeToAction(api.state, 0.2);\n        }\n\n        for (let i = 0; i < emotes.length; i++) {\n            createEmoteCallback(emotes[i]);\n        }\n\n        emoteFolder.open();\n\n        // expressions\n        face = model.getObjectByName('Head_4');\n        const expressions = Object.keys(face.morphTargetDictionary);\n        const expressionFolder = gui.addFolder('Expressions');\n        for (let i = 0; i < expressions.length; i++) {\n            expressionFolder.add(face.morphTargetInfluences, i, 0, 1, 0.01).name(expressions[i]);\n        }\n        activeAction = actions['Walking'];\n        activeAction.play();\n        expressionFolder.open();\n    }\n\n    function fadeToAction(name, duration) {\n        previousAction = activeAction;\n        activeAction = actions[name];\n        if (previousAction !== activeAction) {\n            previousAction.fadeOut(duration);\n        }\n        activeAction\n            .reset()\n            .setEffectiveTimeScale(1)\n            .setEffectiveWeight(1)\n            .fadeIn(duration)\n            .play();\n\n    }\n\n    function onWindowResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function animate() {\n        if (!document.querySelector('.showDemos'))return\n        const dt = clock.getDelta();\n        if (mixer) mixer.update(dt);\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n        stats.update();\n    }\n\n    return <div/>\n}","import './App.css';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport {InitDemo} from \"./demo/初始demo\";\nimport {DrawLineDemo} from \"./demo/画线demo\";\nimport {Home} from \"./demo/Home\";\nimport {FontDemo} from \"./demo/文字demo\";\nimport {TDGlb} from \"./demo/3DGlb\";\nimport {TDTexture} from \"./demo/3DDTexture\";\nimport {TDAnimation} from \"./demo/3DAnimat\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Home/>\n                <Route exact path=\"/\"/>\n                <Route path=\"/DrawLineDemo\" component={DrawLineDemo}/>\n                <Route path=\"/InitDemo\" component={InitDemo}/>\n                <Route path=\"/FontDemo\" component={FontDemo}/>\n                <Route path=\"/3DGlb\" component={TDGlb}/>\n                <Route path=\"/3DTexture\" component={TDTexture}/>\n                <Route path=\"/TDAnimation\" component={TDAnimation}/>\n            </BrowserRouter>\n            <div className='showDemos'/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}